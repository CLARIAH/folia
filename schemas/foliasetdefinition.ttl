@base <http://folia.science.ru.nl/setdefinition> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

# FoLiA Set Definitions use SKOS:
# - Sets corresponds to Collections (skos:Collection)
# - Classes corresponds to Concepts (skos:Concept)
# - IDs for both sets and classes anotation attribute is mandatory


# set type (non-SKOS)

<#open>
    a owl:DataTypeProperty ;
    a rdf:Property ; #for non-OWL aware applications
    skos:definition "Open set definition. Classes may refer to anything. Otherwise, the set is closed." ;
    rdfs:domain skos:ConceptScheme .
    rdfs:range xsd:boolean .

<#empty>
    a owl:DataTypeProperty ;
    a rdf:Property ;#for non-OWL aware applications
    skos:definition "Empty set definition. The set itself takes no classes, it may however still define subsets." ;
    rdfs:domain skos:ConceptScheme .
    rdfs:range xsd:boolean .

#non-SKOS:

<#sequenceNumber>
    a owl:DataTypeProperty ;
    a rdf:Property ; #for non-OWL aware applications
    skos:definition "The sequence number determines an explicit ordering of classes for presentational purposes, alphabetic ordering should be assumed if no sequence numbers are present" ;
    rdfs:domain skos:Concept ;
    rdfs:target xsd:integer .

#Constraints (non-SKOS)

<#Constraint>
    a owl:Class ;
    a rdf:Resource ;
    rdfs:label "A named constraint, containing one or more constrain properies"  .

<#constraintType>
    a owl:DataTypeProperty ;
    a rdf:Property ; #for non-OWL aware applications
    rdfs:label "Constraint Type, can be set to any, all or none" ;
    rdfs:domain <#Constraint> ;
    rdfs:range xsd:string .

<#constrain>
    a rdf:Property ,
      owl:ObjectProperty ;
    rdfs:label "A constrain relation" ;
    rdfs:domain [ rdf:type owl:Class ;
                  owl:unionOf ( skos:Concept skos:ConceptScheme <#Constraint> ) ] ;
    rdfs:range [ rdf:type owl:Class ;
                  owl:unionOf ( skos:Concept skos:ConceptScheme <#Constraint> ) ] .







